{"version":3,"sources":["components/CreateContactForm/CreateContactForm.module.css","transitions/pop.module.css","components/App/App.module.css","transitions/slide-500ms.module.css","components/Section/Section.module.css","transitions/slide.module.css","components/Filter/Filter.module.css","components/Alert/Alert.module.css","components/Section/Section.js","redux/contacts/contactsTypes.js","components/ContactsList/ContactsListItem.js","components/Notification/Notification.js","components/ContactsList/ContactsList.js","components/ContactsList/ContatctsListContainer.js","helpers/toFilterContacts.js","redux/contacts/contactsActions.js","redux/filter/filterTypes.js","components/Filter/Filter.js","components/Filter/FilterContainer.js","redux/filter/filterActions.js","components/CreateContactForm/CreateContactForm.js","components/CreateContactForm/CreateContactFormContainer.js","helpers/toAddId.js","components/Alert/Alert.js","components/App/App.js","components/App/AppContainer.js","helpers/saveLocalStorage.js","redux/contacts/contactsReducer.js","redux/filter/filterReducer.js","redux/alert/alertTypes.js","redux/alert/alertReducer.js","redux/middleware/validation.js","redux/alert/alertActions.js","redux/store.js","index.js","components/ContactsList/ContactsList.module.css"],"names":["module","exports","Section","title","children","className","titleSection","Type","ContactsListItem","name","number","onDeleteContact","index","wrap","type","onClick","button","icon","Notification","message","ContactsList","this","props","onLoadContacts","contacts","length","TransitionGroup","component","list","map","id","CSSTransition","key","timeout","classNames","slideTransition","unmountOnExit","item","Component","connect","state","filter","contact","toLowerCase","includes","dispatch","payload","contactsActions","NumberFilter","value","onChangeFilter","onChange","placeholder","event","target","Filter","TaskEditor","handleChange","setState","handleSubmit","preventDefault","onAddContact","onSubmit","form","meta","addContact","obj","shortid","generate","CreateContactForm","Alert","p","App","addTittle","alert","count","isAlert","styles","container","in","slideTittleTransition","popTransition","toGetContacts","savedContacts","localStorage","getItem","JSON","parse","error","toAddContacts","newContacts","setItem","stringify","toDeleteContacts","contactsReducer","action","filterReducer","console","log","validation","store","next","getState","some","savedContact","setTimeout","rootReducer","combineReducers","alertReducer","enhancer","composeWithDevTools","applyMiddleware","createStore","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.8df7576d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"CreateContactForm_form__1IKsq\",\"button\":\"CreateContactForm_button__v34X3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"pop_enter__1NM7x\",\"enterActive\":\"pop_enterActive__1Bhql\",\"exit\":\"pop_exit__1_phz\",\"exitActive\":\"pop_exitActive__3xbz2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__16xz_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slide-500ms_enter__3KjJC\",\"enterActive\":\"slide-500ms_enterActive__1PUSQ\",\"exit\":\"slide-500ms_exit__Yd33a\",\"exitActive\":\"slide-500ms_exitActive__3BQFL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titleSection\":\"Section_titleSection__3sOBD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slide_enter__BLs75\",\"enterActive\":\"slide_enterActive__2XArv\",\"exit\":\"slide_exit__2XvOt\",\"exitActive\":\"slide_exitActive__3LNYO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1E5tH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"p\":\"Alert_p__3pTNQ\"};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { titleSection } from './Section.module.css';\n\nconst Section = ({ title, children }) => (\n    <section className={titleSection}>\n        <h2>{title}</h2>\n        {children}\n    </section>\n);\n\nSection.propTypes = {\n    title: PropTypes.string.isRequired,\n\n    children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","export const Type = {\n    LOADCONTACTS: 'LOADCONTACTS',\n    ADDCONTACT: 'ADDCONTACT',\n    DELETECONTACT: 'DELETECONTACT',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { icon, button, wrap } from './ContactsList.module.css';\n\nfunction ContactsListItem({ name, number, onDeleteContact, index }) {\n    return (\n        <>\n            <div>\n                <span>\n                    {index}. {name}\n                </span>\n            </div>\n            <div className={wrap}>\n                <p>{number}</p>\n                <button\n                    type=\"button\"\n                    onClick={onDeleteContact}\n                    className={button}\n                >\n                    <i className={`${icon} material-icons`}>close</i>\n                </button>\n            </div>\n        </>\n    );\n}\n\nContactsListItem.propTypes = {\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactsListItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => <p>{message}!</p>;\n\nNotification.propTypes = {\n    message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n\nimport { list, item } from './ContactsList.module.css';\nimport ContactsListItem from './ContactsListItem';\nimport Notification from '../Notification/Notification';\nimport slideTransition from '../../transitions/slide.module.css';\n\nexport default class ContactsList extends Component {\n    static propTypes = {\n        contacts: PropTypes.arrayOf(\n            PropTypes.shape({\n                id: PropTypes.string.isRequired,\n                name: PropTypes.string.isRequired,\n                number: PropTypes.string.isRequired,\n            }),\n        ).isRequired,\n        onDeleteContact: PropTypes.func.isRequired,\n        onLoadContacts: PropTypes.func.isRequired,\n    };\n\n    componentDidMount() {\n        this.props.onLoadContacts();\n    }\n\n    render() {\n        const { contacts, onDeleteContact } = this.props;\n        return (\n            <>\n                {contacts.length > 0 ? (\n                    <TransitionGroup component=\"ul\" className={list}>\n                        {contacts.map(({ id, name, number }, index) => (\n                            <CSSTransition\n                                key={id}\n                                timeout={300}\n                                classNames={slideTransition}\n                                unmountOnExit\n                            >\n                                <li key={id} className={item}>\n                                    <ContactsListItem\n                                        index={index + 1}\n                                        name={name}\n                                        number={number}\n                                        onDeleteContact={() =>\n                                            onDeleteContact(id)\n                                        }\n                                    />\n                                </li>\n                            </CSSTransition>\n                        ))}\n                    </TransitionGroup>\n                ) : (\n                    <Notification message=\"Contacts for query not found\" />\n                )}\n            </>\n        );\n    }\n}\n","import { connect } from 'react-redux';\n\nimport * as contactsActions from '../../redux/contacts/contactsActions';\nimport toFilterContacts from '../../helpers/toFilterContacts';\nimport ContactsList from './ContactsList';\n\nconst mapStateToProps = state => ({\n    contacts: toFilterContacts(state.contacts, state.filter),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onDeleteContact: id => dispatch(contactsActions.deleteContact(id)),\n    onLoadContacts: () => dispatch(contactsActions.loadContacts()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\n","export default (contacts, filter) =>\n    contacts.filter(contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n","import { Type } from './contactsTypes';\n\nexport const loadContacts = () => ({\n    type: Type.LOADCONTACTS,\n    payload: {},\n});\n\nexport const addContact = contact => ({\n    type: Type.ADDCONTACT,\n    payload: { contact },\n    meta: {\n        addContact: true,\n    },\n});\n\nexport const deleteContact = id => ({\n    type: Type.DELETECONTACT,\n    payload: { id },\n});\n","export const Type = {\n    CHANGEFILTER: 'CHANGEFILTER',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { filter } from './Filter.module.css';\n\nconst NumberFilter = ({ value, onChangeFilter }) => (\n    <div className={filter}>\n        <p>Find contacts by name</p>\n        <input\n            type='text'\n            value={value}\n            onChange={onChangeFilter}\n            placeholder='Enter name...'\n        />\n    </div>\n);\n\nNumberFilter.propTypes = {\n    value: PropTypes.string.isRequired,\n    onChangeFilter: PropTypes.func.isRequired,\n};\n\nexport default NumberFilter;\n","import { connect } from 'react-redux';\nimport * as filterActions from '../../redux/filter/filterActions';\n\nimport Filter from './Filter';\n\nconst mapStateToProps = state => ({\n    value: state.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onChangeFilter: event =>\n        dispatch(filterActions.changeFilter(event.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import { Type } from './filterTypes';\n\nexport const changeFilter = filter => ({\n    type: Type.CHANGEFILTER,\n    payload: { filter },\n});\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { form, button, wrap } from './CreateContactForm.module.css';\n\nexport default class TaskEditor extends Component {\n    static propTypes = {\n        onAddContact: PropTypes.func.isRequired,\n    };\n\n    state = {\n        name: '',\n        number: '',\n    };\n\n    handleChange = event => {\n        this.setState({ [event.target.name]: event.target.value });\n    };\n\n    handleSubmit = event => {\n        event.preventDefault();\n\n        this.props.onAddContact({ ...this.state });\n\n        this.setState({\n            name: '',\n            number: '',\n        });\n    };\n\n    render() {\n        const { name, number } = this.state;\n\n        return (\n            <form onSubmit={this.handleSubmit} className={form}>\n                <div className={wrap}>\n                    <p>Name</p>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Enter contact`s name\"\n                        value={name}\n                        onChange={this.handleChange}\n                        name=\"name\"\n                    />\n                </div>\n                <div className={wrap}>\n                    <p>Number</p>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Enter contact`s name\"\n                        value={number}\n                        onChange={this.handleChange}\n                        name=\"number\"\n                    />\n                </div>\n                <button className={button} type=\"submit\">\n                    Add contact\n                </button>\n            </form>\n        );\n    }\n}\n","import { connect } from 'react-redux';\nimport * as contactsActions from '../../redux/contacts/contactsActions';\nimport CreateContactForm from './CreateContactForm';\nimport toAddId from '../../helpers/toAddId';\n\nconst mapDispatchToProps = dispatch => ({\n    onAddContact: contact =>\n        dispatch(contactsActions.addContact(toAddId(contact))),\n});\n\nexport default connect(null, mapDispatchToProps)(CreateContactForm);\n","import shortid from 'shortid';\n\nexport default obj => {\n    return {\n        ...obj,\n        id: shortid.generate(),\n    };\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { p } from './Alert.module.css';\n\nconst Alert = ({ message }) => <p className={p}>{message}!</p>;\n\nAlert.propTypes = {\n    message: PropTypes.string.isRequired,\n};\n\nexport default Alert;\n","import React, { Component } from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport PropTypes from 'prop-types';\n\nimport styles from './App.module.css';\nimport slideTittleTransition from '../../transitions/slide-500ms.module.css';\nimport popTransition from '../../transitions/pop.module.css';\n\nimport Section from '../Section/Section';\nimport ContactsList from '../ContactsList/ContatctsListContainer';\nimport Filter from '../Filter/FilterContainer';\nimport CreateContactForm from '../CreateContactForm/CreateContactFormContainer';\nimport Alert from '../Alert/Alert';\n\nexport default class App extends Component {\n    static propTypes = {\n        alert: PropTypes.string.isRequired,\n        count: PropTypes.number.isRequired,\n    };\n\n    state = {\n        addTittle: false,\n    };\n\n    componentDidMount() {\n        this.setState({\n            addTittle: true,\n        });\n    }\n\n    render() {\n        const { addTittle } = this.state;\n        const { alert, count } = this.props;\n        const isAlert = alert ? true : false;\n\n        return (\n            <div className={styles.container}>\n                <CSSTransition\n                    in={addTittle}\n                    timeout={500}\n                    classNames={slideTittleTransition}\n                    unmountOnExit\n                >\n                    <h1>Phonebook</h1>\n                </CSSTransition>\n\n                <Section title=\"\">\n                    <CreateContactForm />\n                </Section>\n                <CSSTransition\n                    in={count > 2}\n                    timeout={500}\n                    classNames={popTransition}\n                    unmountOnExit\n                >\n                    <Section title=\"\">\n                        <Filter />\n                    </Section>\n                </CSSTransition>\n\n                <Section title=\"\">\n                    <ContactsList />\n                </Section>\n\n                <CSSTransition\n                    in={isAlert}\n                    timeout={300}\n                    classNames={popTransition}\n                    unmountOnExit\n                >\n                    <Alert message={alert} />\n                </CSSTransition>\n            </div>\n        );\n    }\n}\n","import { connect } from 'react-redux';\n\nimport App from './App';\n\nconst mapStateToProps = state => ({\n    alert: state.alert,\n    count: state.contacts.length,\n});\n\nexport default connect(mapStateToProps, null)(App);\n","export const toGetContacts = () => {\n    try {\n        const savedContacts = localStorage.getItem('contacts');\n\n        if (!savedContacts) return [];\n\n        return JSON.parse(savedContacts);\n    } catch (error) {\n        return [];\n    }\n};\n\nexport const toAddContacts = (contacts, contact) => {\n    try {\n        const newContacts = [...contacts, contact];\n        localStorage.setItem('contacts', JSON.stringify(newContacts));\n        return newContacts;\n    } catch (error) {\n        alert('Woooops, something wrong');\n        return contacts;\n    }\n};\n\nexport const toDeleteContacts = (contacts, id) => {\n    try {\n        const newContacts = contacts.filter(contact => contact.id !== id);\n        localStorage.setItem('contacts', JSON.stringify(newContacts));\n        return newContacts;\n    } catch (error) {\n        alert('Woooops, something wrong');\n        return contacts;\n    }\n};\n","import { Type } from './contactsTypes';\nimport {\n    toGetContacts,\n    toAddContacts,\n    toDeleteContacts,\n} from '../../helpers/saveLocalStorage';\n\nconst contactsReducer = (state = [], action) => {\n    switch (action.type) {\n        case Type.LOADCONTACTS:\n            return toGetContacts();\n\n        case Type.ADDCONTACT:\n            return toAddContacts(state, action.payload.contact);\n\n        case Type.DELETECONTACT:\n            return toDeleteContacts(state, action.payload.id);\n        default:\n            return state;\n    }\n};\n\nexport default contactsReducer;\n","import { Type } from './filterTypes';\n\nconst filterReducer = (state = '', action) => {\n    switch (action.type) {\n        case Type.CHANGEFILTER:\n            console.log(action.payload.filter);\n            return action.payload.filter;\n        default:\n            return state;\n    }\n};\n\nexport default filterReducer;\n","export const Type = {\n    SHOWALERT: 'SHOWALERT',\n    HIDEALERT: 'HIDEALERT',\n};\n","import { Type } from './alertTypes';\n\nconst contactsReducer = (state = '', action) => {\n    switch (action.type) {\n        case Type.SHOWALERT:\n            return action.payload.message;\n\n        case Type.HIDEALERT:\n            return '';\n\n        default:\n            return state;\n    }\n};\n\nexport default contactsReducer;\n","import * as alertActions from '../alert/alertActions';\n\nconst validation = store => next => action => {\n    if (action.meta && action.meta.addContact) {\n        const { contacts } = store.getState();\n        const { name } = action.payload.contact;\n        const isUniqueName = contacts.some(\n            savedContact =>\n                savedContact.name.toLowerCase() === name.toLowerCase(),\n        );\n        if (!isUniqueName) return next(action);\n\n        store.dispatch(alertActions.toShowAlert(`Contact already exist!`));\n\n        setTimeout(() => {\n            store.dispatch(alertActions.toHideAlert());\n        }, 3000);\n        return;\n    }\n\n    next(action);\n};\n\nexport default validation;\n","import { Type } from './alertTypes';\n\nexport const toShowAlert = message => ({\n    type: Type.SHOWALERT,\n    payload: { message },\n});\n\nexport const toHideAlert = () => ({\n    type: Type.HIDEALERT,\n});\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport contactsReducer from './contacts/contactsReducer';\nimport filterReducer from './filter/filterReducer';\nimport alertReducer from './alert/alertReducer';\n\nimport validation from './middleware/validation';\n\nconst rootReducer = combineReducers({\n    contacts: contactsReducer,\n    filter: filterReducer,\n    alert: alertReducer,\n});\n\nconst enhancer = composeWithDevTools(applyMiddleware(validation));\n\nconst store = createStore(rootReducer, enhancer);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'material-design-icons/iconfont/material-icons.css';\n\nimport { Provider } from 'react-redux';\nimport App from './components/App/AppContainer';\nimport store from './redux/store';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.querySelector('#root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__2RiYd\",\"item\":\"ContactsList_item__2O7n3\",\"wrap\":\"ContactsList_wrap__2wfAx\"};"],"sourceRoot":""}